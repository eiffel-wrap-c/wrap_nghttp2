note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"
-- functions wrapper
class NGHTTP2_FUNCTIONS_API


feature -- Access

	nghttp2_strerror (lib_error_code: INTEGER): POINTER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_strerror ((int)$lib_error_code);
			]"
		end

	nghttp2_hd_deflate_new (deflater_ptr: NGHTTP2_HD_DEFLATER_STRUCT_API; max_deflate_dynamic_table_size: INTEGER): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_new (deflater_ptr.item, max_deflate_dynamic_table_size)
		end

	nghttp2_hd_deflate_new2 (deflater_ptr: NGHTTP2_HD_DEFLATER_STRUCT_API; max_deflate_dynamic_table_size: INTEGER; mem: NGHTTP2_MEM_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_new2 (deflater_ptr.item, max_deflate_dynamic_table_size, mem.item)
		end

	nghttp2_hd_deflate_del (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API) 
		do
			c_nghttp2_hd_deflate_del (deflater.item)
		end

	nghttp2_hd_deflate_change_table_size (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API; settings_max_dynamic_table_size: INTEGER): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_change_table_size (deflater.item, settings_max_dynamic_table_size)
		end

	nghttp2_hd_deflate_hd (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API; buf: STRING; buflen: INTEGER; nva: NGHTTP2_NV_STRUCT_API; nvlen: INTEGER): INTEGER 
		local
			buf_c_string: C_STRING
		do
			create buf_c_string.make (buf)
			Result := c_nghttp2_hd_deflate_hd (deflater.item, buf_c_string.item, buflen, nva.item, nvlen)
		end

	nghttp2_hd_deflate_hd_vec (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API; vec: NGHTTP2_VEC_STRUCT_API; veclen: INTEGER; nva: NGHTTP2_NV_STRUCT_API; nvlen: INTEGER): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_hd_vec (deflater.item, vec.item, veclen, nva.item, nvlen)
		end

	nghttp2_hd_deflate_bound (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API; nva: NGHTTP2_NV_STRUCT_API; nvlen: INTEGER): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_bound (deflater.item, nva.item, nvlen)
		end

	nghttp2_hd_deflate_get_num_table_entries (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_get_num_table_entries (deflater.item)
		end

	nghttp2_hd_deflate_get_table_entry (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API; idx: INTEGER): detachable NGHTTP2_NV_STRUCT_API 
		do
			if attached c_nghttp2_hd_deflate_get_table_entry (deflater.item, idx) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	nghttp2_hd_deflate_get_dynamic_table_size (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_get_dynamic_table_size (deflater.item)
		end

	nghttp2_hd_deflate_get_max_dynamic_table_size (deflater: NGHTTP2_HD_DEFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_deflate_get_max_dynamic_table_size (deflater.item)
		end

	nghttp2_hd_inflate_new (inflater_ptr: NGHTTP2_HD_INFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_new (inflater_ptr.item)
		end

	nghttp2_hd_inflate_new2 (inflater_ptr: NGHTTP2_HD_INFLATER_STRUCT_API; mem: NGHTTP2_MEM_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_new2 (inflater_ptr.item, mem.item)
		end

	nghttp2_hd_inflate_del (inflater: NGHTTP2_HD_INFLATER_STRUCT_API) 
		do
			c_nghttp2_hd_inflate_del (inflater.item)
		end

	nghttp2_hd_inflate_change_table_size (inflater: NGHTTP2_HD_INFLATER_STRUCT_API; settings_max_dynamic_table_size: INTEGER): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_change_table_size (inflater.item, settings_max_dynamic_table_size)
		end

	nghttp2_hd_inflate_hd (inflater: NGHTTP2_HD_INFLATER_STRUCT_API; nv_out: NGHTTP2_NV_STRUCT_API; inflate_flags: POINTER; in: STRING; inlen: INTEGER; in_final: INTEGER): INTEGER 
		local
			in_c_string: C_STRING
		do
			create in_c_string.make (in)
			Result := c_nghttp2_hd_inflate_hd (inflater.item, nv_out.item, inflate_flags, in_c_string.item, inlen, in_final)
		end

	nghttp2_hd_inflate_hd2 (inflater: NGHTTP2_HD_INFLATER_STRUCT_API; nv_out: NGHTTP2_NV_STRUCT_API; inflate_flags: POINTER; in: STRING; inlen: INTEGER; in_final: INTEGER): INTEGER 
		local
			in_c_string: C_STRING
		do
			create in_c_string.make (in)
			Result := c_nghttp2_hd_inflate_hd2 (inflater.item, nv_out.item, inflate_flags, in_c_string.item, inlen, in_final)
		end

	nghttp2_hd_inflate_end_headers (inflater: NGHTTP2_HD_INFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_end_headers (inflater.item)
		end

	nghttp2_hd_inflate_get_num_table_entries (inflater: NGHTTP2_HD_INFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_get_num_table_entries (inflater.item)
		end

	nghttp2_hd_inflate_get_table_entry (inflater: NGHTTP2_HD_INFLATER_STRUCT_API; idx: INTEGER): detachable NGHTTP2_NV_STRUCT_API 
		do
			if attached c_nghttp2_hd_inflate_get_table_entry (inflater.item, idx) as l_ptr and then not l_ptr.is_default_pointer then
				create Result.make_by_pointer ( l_ptr )
			end

		end

	nghttp2_hd_inflate_get_dynamic_table_size (inflater: NGHTTP2_HD_INFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_get_dynamic_table_size (inflater.item)
		end

	nghttp2_hd_inflate_get_max_dynamic_table_size (inflater: NGHTTP2_HD_INFLATER_STRUCT_API): INTEGER 
		do
			Result := c_nghttp2_hd_inflate_get_max_dynamic_table_size (inflater.item)
		end

feature -- Externals

	c_nghttp2_hd_deflate_new (deflater_ptr: POINTER; max_deflate_dynamic_table_size: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_new ((nghttp2_hd_deflater**)$deflater_ptr, (size_t)$max_deflate_dynamic_table_size);
			]"
		end

	c_nghttp2_hd_deflate_new2 (deflater_ptr: POINTER; max_deflate_dynamic_table_size: INTEGER; mem: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_new2 ((nghttp2_hd_deflater**)$deflater_ptr, (size_t)$max_deflate_dynamic_table_size, (nghttp2_mem*)$mem);
			]"
		end

	c_nghttp2_hd_deflate_del (deflater: POINTER)
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				nghttp2_hd_deflate_del ((nghttp2_hd_deflater*)$deflater);
			]"
		end

	c_nghttp2_hd_deflate_change_table_size (deflater: POINTER; settings_max_dynamic_table_size: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_change_table_size ((nghttp2_hd_deflater*)$deflater, (size_t)$settings_max_dynamic_table_size);
			]"
		end

	c_nghttp2_hd_deflate_hd (deflater: POINTER; buf: POINTER; buflen: INTEGER; nva: POINTER; nvlen: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_hd ((nghttp2_hd_deflater*)$deflater, (uint8_t*)$buf, (size_t)$buflen, (nghttp2_nv const*)$nva, (size_t)$nvlen);
			]"
		end

	c_nghttp2_hd_deflate_hd_vec (deflater: POINTER; vec: POINTER; veclen: INTEGER; nva: POINTER; nvlen: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_hd_vec ((nghttp2_hd_deflater*)$deflater, (nghttp2_vec const*)$vec, (size_t)$veclen, (nghttp2_nv const*)$nva, (size_t)$nvlen);
			]"
		end

	c_nghttp2_hd_deflate_bound (deflater: POINTER; nva: POINTER; nvlen: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_bound ((nghttp2_hd_deflater*)$deflater, (nghttp2_nv const*)$nva, (size_t)$nvlen);
			]"
		end

	c_nghttp2_hd_deflate_get_num_table_entries (deflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_get_num_table_entries ((nghttp2_hd_deflater*)$deflater);
			]"
		end

	c_nghttp2_hd_deflate_get_table_entry (deflater: POINTER; idx: INTEGER): POINTER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_get_table_entry ((nghttp2_hd_deflater*)$deflater, (size_t)$idx);
			]"
		end

	c_nghttp2_hd_deflate_get_dynamic_table_size (deflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_get_dynamic_table_size ((nghttp2_hd_deflater*)$deflater);
			]"
		end

	c_nghttp2_hd_deflate_get_max_dynamic_table_size (deflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_deflate_get_max_dynamic_table_size ((nghttp2_hd_deflater*)$deflater);
			]"
		end

	c_nghttp2_hd_inflate_new (inflater_ptr: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_new ((nghttp2_hd_inflater**)$inflater_ptr);
			]"
		end

	c_nghttp2_hd_inflate_new2 (inflater_ptr: POINTER; mem: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_new2 ((nghttp2_hd_inflater**)$inflater_ptr, (nghttp2_mem*)$mem);
			]"
		end

	c_nghttp2_hd_inflate_del (inflater: POINTER)
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				nghttp2_hd_inflate_del ((nghttp2_hd_inflater*)$inflater);
			]"
		end

	c_nghttp2_hd_inflate_change_table_size (inflater: POINTER; settings_max_dynamic_table_size: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_change_table_size ((nghttp2_hd_inflater*)$inflater, (size_t)$settings_max_dynamic_table_size);
			]"
		end

	c_nghttp2_hd_inflate_hd (inflater: POINTER; nv_out: POINTER; inflate_flags: POINTER; in: POINTER; inlen: INTEGER; in_final: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_hd ((nghttp2_hd_inflater*)$inflater, (nghttp2_nv*)$nv_out, (int*)$inflate_flags, (uint8_t*)$in, (size_t)$inlen, (int)$in_final);
			]"
		end

	c_nghttp2_hd_inflate_hd2 (inflater: POINTER; nv_out: POINTER; inflate_flags: POINTER; in: POINTER; inlen: INTEGER; in_final: INTEGER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_hd2 ((nghttp2_hd_inflater*)$inflater, (nghttp2_nv*)$nv_out, (int*)$inflate_flags, (uint8_t const*)$in, (size_t)$inlen, (int)$in_final);
			]"
		end

	c_nghttp2_hd_inflate_end_headers (inflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_end_headers ((nghttp2_hd_inflater*)$inflater);
			]"
		end

	c_nghttp2_hd_inflate_get_num_table_entries (inflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_get_num_table_entries ((nghttp2_hd_inflater*)$inflater);
			]"
		end

	c_nghttp2_hd_inflate_get_table_entry (inflater: POINTER; idx: INTEGER): POINTER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_get_table_entry ((nghttp2_hd_inflater*)$inflater, (size_t)$idx);
			]"
		end

	c_nghttp2_hd_inflate_get_dynamic_table_size (inflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_get_dynamic_table_size ((nghttp2_hd_inflater*)$inflater);
			]"
		end

	c_nghttp2_hd_inflate_get_max_dynamic_table_size (inflater: POINTER): INTEGER
		external
			"C inline use <nghttp2.h>"
		alias
			"[
				return nghttp2_hd_inflate_get_max_dynamic_table_size ((nghttp2_hd_inflater*)$inflater);
			]"
		end

feature -- Externals Address

end
